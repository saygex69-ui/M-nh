-- ‚úÖ Notification (khuy·∫øn ngh·ªã: ch·ªânh n·ªôi dung cho ph√π h·ª£p)
game.StarterGui:SetCore("SendNotification", {
    Title = "M·∫°nh Hay Y·∫øu";
    Text = "K√≠ch ho·∫°t th√†nh c√¥ng Script!";
    Icon = "rbxassetid://92278047249087";
    Duration = 10;
    Button1 = "OK";
})

-- ‚úÖ UI: Fluent
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Si Li C√¥n Hub",
    SubTitle = "PREMIUM",
    TabWidth = 155,
    Size = UDim2.fromOffset(500, 350),
    Acrylic = true, 
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl 
})
local Tab = Window:AddTab({ Title = "Ch·ª©c NƒÉng", Icon = "üèÉ" })

-- ‚úÖ ESP Function
local function createESP(player, label)
    local BillboardGui = Instance.new("BillboardGui")
    BillboardGui.Name = "ESP"
    BillboardGui.Adornee = player.Character:WaitForChild("Head")
    BillboardGui.Size = UDim2.new(0, 100, 0, 20)
    BillboardGui.StudsOffset = Vector3.new(0, 3, 0)
    BillboardGui.AlwaysOnTop = true

    local TextLabel = Instance.new("TextLabel", BillboardGui)
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.BackgroundTransparency = 1
    TextLabel.TextColor3 = Color3.new(1, 0, 0)
    TextLabel.TextStrokeTransparency = 0.5
    TextLabel.Text = label
    TextLabel.Font = Enum.Font.SourceSansBold
    TextLabel.TextSize = 14

    BillboardGui.Parent = player.Character:WaitForChild("Head")
end

-- ‚úÖ Ch·ª©c nƒÉng
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Fly
local flying = false
local bodyGyro, bodyVelocity
local function setFly(state)
    if state then
        bodyGyro = Instance.new("BodyGyro", HumanoidRootPart)
        bodyGyro.P = 9e4
        bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
        bodyGyro.CFrame = HumanoidRootPart.CFrame

        bodyVelocity = Instance.new("BodyVelocity", HumanoidRootPart)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)

        game:GetService("RunService").RenderStepped:Connect(function()
            if flying then
                bodyVelocity.Velocity = LocalPlayer:GetMouse().Hit.LookVector * 50
                bodyGyro.CFrame = workspace.CurrentCamera.CFrame
            end
        end)
    else
        if bodyGyro then bodyGyro:Destroy() end
        if bodyVelocity then bodyVelocity:Destroy() end
    end
end

Tab:AddToggle("Fly", {default = false}, function(value)
    flying = value
    setFly(value)
end)

-- ESP Player
Tab:AddToggle("ESP Ng∆∞·ªùi Ch∆°i", {default = false}, function(on)
    if on then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer and plr.Character then
                if not plr.Character:FindFirstChild("ESP") then
                    createESP(plr, plr.Name)
                end
            end
        end
    else
        for _, plr in pairs(Players:GetPlayers()) do
            if plr.Character and plr.Character:FindFirstChild("ESP") then
                plr.Character:FindFirstChild("ESP"):Destroy()
            end
        end
    end
end)

-- ESP Time
Tab:AddToggle("ESP Th·ªùi Gian", {default = false}, function(on)
    if on then
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= LocalPlayer and plr.Character then
                local label = os.date("%H:%M:%S")
                createESP(plr, label)
            end
        end
    else
        for _, plr in pairs(Players:GetPlayers()) do
            if plr.Character and plr.Character:FindFirstChild("ESP") then
                plr.Character:FindFirstChild("ESP"):Destroy()
            end
        end
    end
end)

-- Jump Hack
Tab:AddSlider("Jump Power", {min = 50, max = 250, default = 50, precise = true}, function(val)
    Humanoid.JumpPower = val
end)

-- Speed Hack
Tab:AddSlider("Walk Speed", {min = 16, max = 150, default = 16, precise = true}, function(val)
    Humanoid.WalkSpeed = val
end)

-- ‚úÖ N√∫t m·ªü Menu (·∫©n hi·ªán b·∫±ng LeftControl)
local MasteryHubBtn = Instance.new("ScreenGui")
local dutdit = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local TextButton = Instance.new("TextButton")

MasteryHubBtn.Name = "Mastery Hub Btn"
MasteryHubBtn.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
MasteryHubBtn.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

dutdit.Name = "dut dit"
dutdit.Parent = MasteryHubBtn
dutdit.AnchorPoint = Vector2.new(0.1, 0.1)
dutdit.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
dutdit.Position = UDim2.new(0, 20, 0.1, -6)
dutdit.Size = UDim2.new(0, 50, 0, 50)

UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = dutdit

ImageLabel.Parent = dutdit
ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
ImageLabel.BackgroundTransparency = 1.0
ImageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
ImageLabel.Size = UDim2.new(0, 40, 0, 40)
ImageLabel.Image = "rbxassetid://92278047249087"

TextButton.Parent = dutdit
TextButton.BackgroundTransparency = 1.0
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Text = ""

local TweenService = game:GetService("TweenService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local zoomedIn = false
local originalSize = UDim2.new(0, 40, 0, 40)
local zoomedSize = UDim2.new(0, 30, 0, 30)
local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local faded = false
local fadeInTween = TweenService:Create(dutdit, tweenInfo, {BackgroundTransparency = 0.25})
local fadeOutTween = TweenService:Create(dutdit, tweenInfo, {BackgroundTransparency = 0})

TextButton.MouseButton1Down:Connect(function()
    if zoomedIn then
        TweenService:Create(ImageLabel, tweenInfo, {Size = originalSize}):Play()
    else
        TweenService:Create(ImageLabel, tweenInfo, {Size = zoomedSize}):Play()
    end
    zoomedIn = not zoomedIn

    if faded then
        fadeOutTween:Play()
    else
        fadeInTween:Play()
    end
    faded = not faded

    VirtualInputManager:SendKeyEvent(true, "LeftControl", false, game)
end)
