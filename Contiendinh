-- === Services & Variables ===
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local root = char:WaitForChild("HumanoidRootPart")
local humanoid = char:FindFirstChildOfClass("Humanoid")

-- Update references on respawn
local function updateChar()
    char = player.Character or player.CharacterAdded:Wait()
    root = char:WaitForChild("HumanoidRootPart")
    humanoid = char:FindFirstChildOfClass("Humanoid")
end
player.CharacterAdded:Connect(function()
    updateChar()
end)

-- Dummy antiStun to prevent errors
function antiStun(on)
    -- Implement your anti-stun logic here if needed
end

-- Functionality variables
local jumpEnabled = false
_G.SlowFallJump = false
_G.espEnabled = false
local godConnection

-- === Feature: God Mode ===
function setGodMode(on)
    if not humanoid then return end
    if on then
        humanoid.MaxHealth = math.huge
        humanoid.Health = math.huge
        if godConnection then godConnection:Disconnect() end
        godConnection = humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            if humanoid.Health < math.huge then
                humanoid.Health = math.huge
            end
        end)
    else
        if godConnection then godConnection:Disconnect() end
        humanoid.MaxHealth = 100
        humanoid.Health = 100
    end
end

-- === Feature: Invisibility ===
function setInvisible(on)
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Transparency = on and 1 or 0
        elseif part:IsA("Decal") then
            part.Transparency = on and 1 or 0
        end
    end
end

-- === Feature: Slow Fall Jump ===
UserInputService.JumpRequest:Connect(function()
    if _G.SlowFallJump and humanoid and root then
        root.AssemblyLinearVelocity = Vector3.new(0, 100, 0)
        local gravityConn
        gravityConn = RunService.Stepped:Connect(function()
            if not char or not root or not humanoid then
                gravityConn:Disconnect()
                return
            end
            if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                root.Velocity = Vector3.new(root.Velocity.X, math.clamp(root.Velocity.Y, -20, 150), root.Velocity.Z)
            elseif humanoid.FloorMaterial ~= Enum.Material.Air then
                gravityConn:Disconnect()
            end
        end)
    end
end)

-- === Feature: Unlimited Jump ===
UserInputService.JumpRequest:Connect(function()
    if jumpEnabled and humanoid then
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end)

-- === Feature: ESP Players ===
function applyESP(plr)
    if plr == player then return end
    local function addESP(character)
        local hrp = character:FindFirstChild("HumanoidRootPart")
        if not hrp then return end
        if character:FindFirstChild("PlayerESP") then character.PlayerESP:Destroy() end
        if hrp:FindFirstChild("NameTag") then hrp.NameTag:Destroy() end

        local highlight = Instance.new("Highlight", character)
        highlight.Name = "PlayerESP"
        highlight.FillColor = Color3.new(1,0,0)
        highlight.OutlineColor = Color3.new(1,1,1)

        local nameTag = Instance.new("BillboardGui", hrp)
        nameTag.Name = "NameTag"
        nameTag.Size = UDim2.new(0, 100, 0, 30)
        nameTag.AlwaysOnTop = true
        nameTag.StudsOffset = Vector3.new(0,2,0)

        local nameText = Instance.new("TextLabel", nameTag)
        nameText.Size = UDim2.new(1,0,1,0)
        nameText.BackgroundTransparency = 1
        nameText.TextColor3 = Color3.new(1,0,0)
        nameText.Text = plr.DisplayName
        nameText.Font = Enum.Font.GothamBold
        nameText.TextScaled = true
    end

    if plr.Character then addESP(plr.Character) end
    plr.CharacterAdded:Connect(function(c) 
        c:WaitForChild("HumanoidRootPart")
        addESP(c)
    end)
end

function setESPPlayer(on)
    _G.espEnabled = on
    if on then
        for _, plr in pairs(Players:GetPlayers()) do applyESP(plr) end
        Players.PlayerAdded:Connect(applyESP)
    else
        for _, plr in pairs(Players:GetPlayers()) do
            if plr.Character then
                local c = plr.Character
                if c:FindFirstChild("PlayerESP") then c.PlayerESP:Destroy() end
                local hrp = c:FindFirstChild("HumanoidRootPart")
                if hrp and hrp:FindFirstChild("NameTag") then hrp.NameTag:Destroy() end
            end
        end
    end
end

-- === GUI Setup ===
local gui = Instance.new("ScreenGui")
gui.Name = "SiliconUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0,260,0,320)
main.Position = UDim2.new(0.5,-130,0.4,-175)
main.BackgroundColor3 = Color3.fromRGB(25,25,25)
main.Active = true
main.Draggable = true
Instance.new("UICorner", main)

local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1,0,0,40)
title.BackgroundTransparency = 1
title.Text = "Si Li Côn"
title.Font = Enum.Font.FredokaOne
title.TextScaled = true
title.TextColor3 = Color3.new(1,1,1)
Instance.new("UICorner", title)

-- Rainbow title effect
spawn(function()
    local rainbow = {
        Color3.fromRGB(255,0,0), Color3.fromRGB(255,127,0),
        Color3.fromRGB(255,255,0), Color3.fromRGB(0,255,0),
        Color3.fromRGB(0,255,255), Color3.fromRGB(0,0,255),
        Color3.fromRGB(139,0,255)
    }
    while true do
        for _, col in ipairs(rainbow) do
            title.TextColor3 = col
            wait(0.1)
        end
    end
end)

local content = Instance.new("ScrollingFrame", main)
content.Size = UDim2.new(1,-10,1,-50)
content.Position = UDim2.new(0,5,0,45)
content.BackgroundTransparency = 1
content.CanvasSize = UDim2.new(0,0,0,0)
content.ScrollBarThickness = 6
content.ScrollingDirection = Enum.ScrollingDirection.Y
content.AutomaticCanvasSize = Enum.AutomaticSize.Y
content.ClipsDescendants = true
local layout = Instance.new("UIListLayout", content)
layout.Padding = UDim.new(0,8)
layout.SortOrder = Enum.SortOrder.LayoutOrder

local logo = Instance.new("ImageButton", gui)
logo.Name = "ToggleButton"
logo.Size = UDim2.new(0,50,0,50)
logo.Position = UDim2.new(0,10,0.5,-25)
logo.BackgroundColor3 = Color3.fromRGB(30,30,30)
logo.Image = "rbxassetid://92278047249087"
Instance.new("UICorner", logo)
logo.Draggable = true
logo.MouseButton1Click:Connect(function()
    main.Visible = not main.Visible
end)

-- Helper to create buttons
local function createButton(text, callback)
    local btn = Instance.new("TextButton", content)
    btn.Size = UDim2.new(0.85,0,0,32)
    btn.BackgroundColor3 = Color3.fromRGB(170,0,0)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    Instance.new("UICorner", btn)
    local state = false
    btn.MouseButton1Click:Connect(function()
        state = not state
        btn.BackgroundColor3 = state and Color3.fromRGB(0,170,0) or Color3.fromRGB(170,0,0)
        callback(state)
    end)
end

-- === Teleport Doors Feature ===
local doorPositions = {
    Vector3.new(-466,-1,220), Vector3.new(-466,-2,116), Vector3.new(-466,-2,8),
    Vector3.new(-464,-2,-102), Vector3.new(-351,-2,-100), Vector3.new(-354,-2,5),
    Vector3.new(-354,-2,115), Vector3.new(-358,-2,223)
}
local function getNearestDoor()
    local closest, minDist = nil, math.huge
    for _, pos in ipairs(doorPositions) do
        local dist = (root.Position - pos).Magnitude
        if dist < minDist then
            minDist = dist
            closest = pos
        end
    end
    return closest
end

local function goUp()
    local door = getNearestDoor()
    if door then
        TweenService:Create(root, TweenInfo.new(1.2), {CFrame = CFrame.new(door)}):Play()
        wait(1.3)
        root.CFrame = root.CFrame + Vector3.new(0,200,0)
    end
end

local function dropDown()
    if root then
        root.CFrame = root.CFrame - Vector3.new(0,50,0)
    end
end

-- Create buttons
createButton("mạnh thí", function(on)
    if on then goUp() end
end)
createButton("yếu thí", function(on)
    if on then dropDown() end
end)
createButton("nhảy như si li côn", function(on)
    jumpEnabled = on
    if humanoid then humanoid.JumpPower = on and 250 or 50 end
end)
createButton("High Jump", function(on) _G.SlowFallJump = on end)

-- === Sound & Notification ===
local sound = Instance.new("Sound", gui)
sound.SoundId = "rbxassetid://113018204052536"
sound.Volume = 1
sound:Play()

local function showNotification(msg)
    local notify = Instance.new("TextLabel", gui)
    notify.Size = UDim2.new(0,300,0,40)
    notify.Position = UDim2.new(1,-310,1,-60)
    notify.BackgroundColor3 = Color3.fromRGB(30,30,30)
    notify.TextColor3 = Color3.new(1,1,1)
    notify.Font = Enum.Font.GothamBold
    notify.TextSize = 18
    notify.Text = msg
    notify.BackgroundTransparency = 0.2
    Instance.new("UICorner", notify)

    TweenService:Create(notify, TweenInfo.new(0.5), {TextTransparency = 0, BackgroundTransparency = 0.2}):Play()
    wait(2.5)
    TweenService:Create(notify, TweenInfo.new(0.5), {TextTransparency = 1, BackgroundTransparency = 1}):Play()
    wait(0.6)
    notify:Destroy()
end
